{"version":3,"sources":["components/Header.js","components/FooterBar.js","actions/groceryList.js","actions/actionTypes.js","components/GroceryItem.js","components/ItemList.js","components/ItemListContainer.js","components/AddDialog.js","components/App.js","serviceWorker.js","reducers/index.js","configureStore.js","index.js"],"names":["Header","state","value","handleChange","event","_this","setState","classes","this","props","react_default","a","createElement","className","root","CssBaseline_default","AppBar_default","color","position","Toolbar_default","IconButton_default","menuButton","aria-label","Menu_default","Typography_default","variant","noWrap","grow","otherToolbarButton","ViewModule_default","SortByAlpha_default","Component","withStyles","theme","flexGrow","marginLeft","marginRight","Footer","Fragment","appBar","toolbar","Button_default","Fab_default","fabButton","onClick","toggleAddModal","Add_default","StyledFooter","top","bottom","alignItems","justifyContent","zIndex","left","right","margin","connect","dispatch","type","groceryItem","ListItem_default","key","button","ListItemAvatar_default","Avatar_default","alt","concat","ListItemText_default","primary","ListItemSecondaryAction_default","Checkbox_default","onChange","handleToggle","checked","ItemList","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","currentIndex","indexOf","newChecked","toConsumableArray","push","splice","bind","assertThisInitialized","_this2","numbersArray","Array","keys","List_default","map","GroceryItem","React","width","backgroundColor","palette","background","paper","padding","spacing","unit","marginTop","marginBottom","textAlign","text","secondary","Paper_default","Grid_default","container","item","xs","components_ItemList","AddDialog","_ref","isOpen","toggleModal","Dialog_default","open","onClose","aria-labelledby","DialogTitle_default","id","DialogContent_default","DialogContentText_default","TextField_default","autoFocus","label","fullWidth","DialogActions_default","App","components_Header","components_ItemListContainer","FooterBar","components_AddDialog","addModalIsOpen","StyledApp","addGroceriesModalOpen","Boolean","window","location","hostname","match","initialState","createStore","arguments","length","undefined","objectSpread","ReactDOM","render","es","store","components_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"sZA8BMA,6MACJC,MAAQ,CACNC,MAAO,aAGTC,aAAe,SAACC,EAAOF,GACrBG,EAAKC,SAAS,CAAEJ,mFAGT,IACCK,EAAYC,KAAKC,MAAjBF,QAER,OACEG,EAAAC,EAAAC,cAAA,OAAKC,UAAWN,EAAQO,MACtBJ,EAAAC,EAAAC,cAACG,EAAAJ,EAAD,MACAD,EAAAC,EAAAC,cAACI,EAAAL,EAAD,CAAQM,MAAM,UAAUC,SAAS,SAC/BR,EAAAC,EAAAC,cAACO,EAAAR,EAAD,KACED,EAAAC,EAAAC,cAACQ,EAAAT,EAAD,CACEE,UAAWN,EAAQc,WACnBJ,MAAM,UACNK,aAAW,QAEXZ,EAAAC,EAAAC,cAACW,EAAAZ,EAAD,OAEFD,EAAAC,EAAAC,cAACY,EAAAb,EAAD,CACEc,QAAQ,KACRR,MAAM,UACNS,QAAM,EACNb,UAAWN,EAAQoB,MAJrB,aAQAjB,EAAAC,EAAAC,cAACQ,EAAAT,EAAD,CACEE,UAAWN,EAAQqB,mBACnBX,MAAM,UACNK,aAAW,YAEXZ,EAAAC,EAAAC,cAACiB,EAAAlB,EAAD,OAEFD,EAAAC,EAAAC,cAACQ,EAAAT,EAAD,CACEE,UAAWN,EAAQqB,mBACnBX,MAAM,UACNK,aAAW,WAEXZ,EAAAC,EAAAC,cAACkB,EAAAnB,EAAD,iBA5COoB,aAuDNC,MAxEA,SAAAC,GAAK,MAAK,CACvBnB,KAAM,CACJoB,SAAU,GAEZP,KAAM,CACJO,SAAU,GAEZb,WAAY,CACVc,YAAa,GACbC,YAAa,IAEfR,mBAAoB,CAClBO,WAAY,GACZC,YAAa,MA2DFJ,CAAmBhC,wDCtD5BqC,6MACJpC,MAAQ,CACNC,MAAO,aAGTC,aAAe,SAACC,EAAOF,GACrBG,EAAKC,SAAS,CAAEJ,mFAGT,IACCK,EAAYC,KAAKC,MAAjBF,QAER,OACEG,EAAAC,EAAAC,cAACF,EAAAC,EAAM2B,SAAP,KACE5B,EAAAC,EAAAC,cAACG,EAAAJ,EAAD,MACAD,EAAAC,EAAAC,cAACI,EAAAL,EAAD,CAAQO,SAAS,QAAQD,MAAM,UAAUJ,UAAWN,EAAQgC,QAC1D7B,EAAAC,EAAAC,cAACO,EAAAR,EAAD,CAASE,UAAWN,EAAQiC,SAC1B9B,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAC6B,EAAA9B,EAAD,CAAQM,MAAM,WAAd,OACAP,EAAAC,EAAAC,cAAC6B,EAAA9B,EAAD,CAAQM,MAAM,WAAd,WACAP,EAAAC,EAAAC,cAAC6B,EAAA9B,EAAD,CAAQM,MAAM,WAAd,WAEFP,EAAAC,EAAAC,cAAC8B,EAAA/B,EAAD,CACEM,MAAM,YACNK,aAAW,MACXT,UAAWN,EAAQoC,UACnBC,QAASpC,KAAKC,MAAMoC,gBAEpBnC,EAAAC,EAAAC,cAACkC,EAAAnC,EAAD,OAEFD,EAAAC,EAAAC,cAAC6B,EAAA9B,EAAD,CAAQM,MAAM,WAAd,sBA9BSc,aAgDfgB,EAAef,IAnEN,SAAAC,GAAK,MAAK,CACvBM,OAAQ,CACNS,IAAK,OACLC,OAAQ,GAEVT,QAAS,CACPU,WAAY,SACZC,eAAgB,iBAElBR,UAAW,CACTzB,SAAU,WACVkC,OAAQ,EACRJ,KAAM,GACNK,KAAM,EACNC,MAAO,EACPC,OAAQ,YAoDSvB,CAAmBK,GACzBmB,cACb,KARyB,SAAAC,GACzB,MAAO,CACLZ,eAAgB,kBAAMY,ECxEjB,CAAEC,KCCqB,wBF4EjBF,CAGbT,uMG5Caf,wBA7BA,SAAAC,GAAK,MAAK,CACvB0B,YAAa,KA4BA3B,CAzBa,SAAAvB,GAAS,IAC3BF,EAAYE,EAAZF,QACR,OACEG,EAAAC,EAAAC,cAACgD,EAAAjD,EAAD,CAAUkD,IAAKpD,EAAMP,MAAO4D,QAAM,EAACjD,UAAWN,EAAQoD,aACpDjD,EAAAC,EAAAC,cAACmD,GAAApD,EAAD,KACED,EAAAC,EAAAC,cAACoD,GAAArD,EAAD,CAAQsD,IAAG,eAAAC,OAAczD,EAAMP,MAAQ,MAEzCQ,EAAAC,EAAAC,cAACuD,GAAAxD,EAAD,CAAcyD,QAAO,aAAAF,OAAezD,EAAMP,MAAQ,KAClDQ,EAAAC,EAAAC,cAACyD,GAAA1D,EAAD,KACED,EAAAC,EAAAC,cAAC0D,GAAA3D,EAAD,CACE4D,SAAU9D,EAAM+D,aAAa/D,EAAMP,OACnCuE,QAAShE,EAAMgE,cCZnBC,eACJ,SAAAA,EAAYjE,GAAO,IAAAJ,EAAA,OAAAsE,OAAAC,EAAA,EAAAD,CAAAnE,KAAAkE,IACjBrE,EAAAsE,OAAAE,EAAA,EAAAF,CAAAnE,KAAAmE,OAAAG,EAAA,EAAAH,CAAAD,GAAAK,KAAAvE,KAAMC,KAGRR,MAAQ,CACNwE,QAAS,CAAC,IALOpE,EAQnBmE,aAAe,SAAAtE,GAAK,OAAI,WAAM,IACpBuE,EAAYpE,EAAKJ,MAAjBwE,QACFO,EAAeP,EAAQQ,QAAQ/E,GAC/BgF,EAAUP,OAAAQ,EAAA,EAAAR,CAAOF,IAED,IAAlBO,EACFE,EAAWE,KAAKlF,GAEhBgF,EAAWG,OAAOL,EAAc,GAGlC3E,EAAKC,SAAS,CACZmE,QAASS,MAlBX7E,EAAKmE,aAAenE,EAAKmE,aAAac,KAAlBX,OAAAY,EAAA,EAAAZ,CAAAtE,IAFHA,wEAwBV,IAAAmF,EAAAhF,KACCD,EAAYC,KAAKC,MAAjBF,QACFkF,EAAYd,OAAAQ,EAAA,EAAAR,CAAOe,MAAM,IAAIC,QAEnC,OACEjF,EAAAC,EAAAC,cAACgF,EAAAjF,EAAD,CAAME,UAAWN,EAAQO,MACtB2E,EAAaI,IAAI,SAAA3F,GAAK,OACrBQ,EAAAC,EAAAC,cAACkF,GAAD,CACEjC,IAAK3D,EACLA,MAAOA,EACPsE,aAAcgB,EAAKhB,aACnBC,SAAgD,IAAvCe,EAAKvF,MAAMwE,QAAQQ,QAAQ/E,eApCzB6F,IAAMhE,WAgDdC,wBAvDA,SAAAC,GAAK,MAAK,CACvBnB,KAAM,CACJkF,MAAO,OACPC,gBAAiBhE,EAAMiE,QAAQC,WAAWC,SAoD/BpE,CAAmB0C,ICtBnB1C,4BAhCA,SAAAC,GAAK,MAAK,CACvBmE,MAAO,CACLC,QAA8B,EAArBpE,EAAMqE,QAAQC,KACvBC,UAAgC,EAArBvE,EAAMqE,QAAQC,KACzBE,aAAmC,EAArBxE,EAAMqE,QAAQC,KAC5BpE,WAAiC,EAArBF,EAAMqE,QAAQC,KAC1BnE,YAAkC,EAArBH,EAAMqE,QAAQC,KAC3BG,UAAW,SACXzF,MAAOgB,EAAMiE,QAAQS,KAAKC,aAwBf5E,CApBf,SAA2BvB,GAAO,IACxBF,EAAYE,EAAZF,QAER,OACEG,EAAAC,EAAAC,cAAA,OAAKC,UAAWN,EAAQO,MACtBJ,EAAAC,EAAAC,cAACiG,EAAAlG,EAAD,CAAOE,UAAWN,EAAQ6F,OACxB1F,EAAAC,EAAAC,cAACkG,EAAAnG,EAAD,CAAMoG,WAAS,EAACT,QAAS,IACvB5F,EAAAC,EAAAC,cAACkG,EAAAnG,EAAD,CAAMqG,MAAI,EAACC,GAAI,IACbvG,EAAAC,EAAAC,cAACsG,GAAD,0ICsBGC,GAvCG,SAAAC,GAA6B,IAA1BC,EAA0BD,EAA1BC,OAAQC,EAAkBF,EAAlBE,YAC3B,OACE5G,EAAAC,EAAAC,cAAC2G,GAAA5G,EAAD,CACE6G,KAAMH,EACNI,QAASH,EACTI,kBAAgB,qBAEhBhH,EAAAC,EAAAC,cAAC+G,GAAAhH,EAAD,CAAaiH,GAAG,qBAAhB,aACAlH,EAAAC,EAAAC,cAACiH,GAAAlH,EAAD,KACED,EAAAC,EAAAC,cAACkH,GAAAnH,EAAD,+GAIAD,EAAAC,EAAAC,cAACmH,GAAApH,EAAD,CACEqH,WAAS,EACTzE,OAAO,QACPqE,GAAG,OACHK,MAAM,gBACNvE,KAAK,QACLwE,WAAS,KAGbxH,EAAAC,EAAAC,cAACuH,GAAAxH,EAAD,KACED,EAAAC,EAAAC,cAAC6B,EAAA9B,EAAD,CAAQiC,QAAS0E,EAAarG,MAAM,WAApC,UAGAP,EAAAC,EAAAC,cAAC6B,EAAA9B,EAAD,CAAQiC,QAAS0E,EAAarG,MAAM,WAApC,gBCvBFmH,8MACJnI,MAAQ,CACNC,MAAO,aAGTC,aAAe,SAACC,EAAOF,GACrBG,EAAKC,SAAS,CAAEJ,mFAOhB,OACEQ,EAAAC,EAAAC,cAACF,EAAAC,EAAM2B,SAAP,KACE5B,EAAAC,EAAAC,cAACG,EAAAJ,EAAD,MACAD,EAAAC,EAAAC,cAACyH,EAAD,MACA3H,EAAAC,EAAAC,cAAC0H,GAAD,MACA5H,EAAAC,EAAAC,cAAC2H,EAAD,MACA7H,EAAAC,EAAAC,cAAC4H,GAAD,CACEnB,OAAQ7G,KAAKC,MAAMgI,eACnBnB,YAAa9G,KAAKC,MAAMoC,yBArBhBd,aAkCL2G,GAAY1G,IApCV,SAAAC,GAAK,MAAK,IAoCAD,CAAmBoG,IAY7B5E,eAVS,SAAAvD,GAAK,MAAK,CAChCwI,eAAgBxI,EAAM0I,wBAGG,SAAAlF,GACzB,MAAO,CACLZ,eAAgB,kBAAMY,ENpDjB,CAAEC,KCCqB,wBKuDjBF,CAGbkF,IClDkBE,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,kFCjBAC,GAAe,CACnBN,uBAAuB,GCAVO,gBDGA,WAAkC,IAAjCjJ,EAAiCkJ,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAzBF,GACtB,QAD+CE,UAAAC,OAAA,EAAAD,UAAA,QAAAE,GAChC3F,MACb,IPH4B,mBOI1B,OAAOiB,OAAA2E,GAAA,EAAA3E,CAAA,GAAK1E,EAAZ,CAAmB0I,uBAAwB1I,EAAM0I,wBACnD,QACE,OAAO1I,KEFbsJ,IAASC,OACP9I,EAAAC,EAAAC,cAAC6I,EAAA,EAAD,CAAUC,MAAOA,IACfhJ,EAAAC,EAAAC,cAAC+I,GAAD,OAEFC,SAASC,eAAe,SHqHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.0d22f163.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport AppBar from '@material-ui/core/AppBar';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport ViewModuleIcon from '@material-ui/icons/ViewModule';\n\nimport SortByAlphaIcon from '@material-ui/icons/SortByAlpha';\n\nconst styles = theme => ({\n  root: {\n    flexGrow: 1\n  },\n  grow: {\n    flexGrow: 1\n  },\n  menuButton: {\n    marginLeft: -12,\n    marginRight: 20\n  },\n  otherToolbarButton: {\n    marginLeft: 20,\n    marginRight: 20\n  }\n});\n\nclass Header extends Component {\n  state = {\n    value: 'recents'\n  };\n\n  handleChange = (event, value) => {\n    this.setState({ value });\n  };\n\n  render() {\n    const { classes } = this.props;\n\n    return (\n      <div className={classes.root}>\n        <CssBaseline />\n        <AppBar color=\"default\" position=\"fixed\">\n          <Toolbar>\n            <IconButton\n              className={classes.menuButton}\n              color=\"inherit\"\n              aria-label=\"Menu\"\n            >\n              <MenuIcon />\n            </IconButton>\n            <Typography\n              variant=\"h6\"\n              color=\"inherit\"\n              noWrap\n              className={classes.grow}\n            >\n              Groshreez\n            </Typography>\n            <IconButton\n              className={classes.otherToolbarButton}\n              color=\"inherit\"\n              aria-label=\"My Lists\"\n            >\n              <ViewModuleIcon />\n            </IconButton>\n            <IconButton\n              className={classes.otherToolbarButton}\n              color=\"inherit\"\n              aria-label=\"Sort By\"\n            >\n              <SortByAlphaIcon />\n            </IconButton>\n          </Toolbar>\n        </AppBar>\n      </div>\n    );\n  }\n}\n\nHeader.propTypes = { classes: PropTypes.object.isRequired };\n\nexport default withStyles(styles)(Header);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Button from '@material-ui/core/Button';\nimport AddIcon from '@material-ui/icons/Add';\nimport Fab from '@material-ui/core/Fab';\nimport { toggleAddModal } from '../actions/groceryList';\n\nconst styles = theme => ({\n  appBar: {\n    top: 'auto',\n    bottom: 0\n  },\n  toolbar: {\n    alignItems: 'center',\n    justifyContent: 'space-between'\n  },\n  fabButton: {\n    position: 'absolute',\n    zIndex: 1,\n    top: -30,\n    left: 0,\n    right: 0,\n    margin: '0 auto'\n  }\n});\n\nclass Footer extends Component {\n  state = {\n    value: 'recents'\n  };\n\n  handleChange = (event, value) => {\n    this.setState({ value });\n  };\n\n  render() {\n    const { classes } = this.props;\n\n    return (\n      <React.Fragment>\n        <CssBaseline />\n        <AppBar position='fixed' color='primary' className={classes.appBar}>\n          <Toolbar className={classes.toolbar}>\n            <div>\n              <Button color='inherit'>All</Button>\n              <Button color='inherit'>In Cart</Button>\n              <Button color='inherit'>To Get</Button>\n            </div>\n            <Fab\n              color='secondary'\n              aria-label='Add'\n              className={classes.fabButton}\n              onClick={this.props.toggleAddModal}\n            >\n              <AddIcon />\n            </Fab>\n            <Button color='inherit'>Checkout</Button>\n          </Toolbar>\n        </AppBar>\n      </React.Fragment>\n    );\n  }\n}\n\nFooter.propTypes = {\n  classes: PropTypes.object.isRequired,\n  toggleAddModal: PropTypes.func.isRequired\n};\nconst mapDispatchToProps = dispatch => {\n  return {\n    toggleAddModal: () => dispatch(toggleAddModal())\n  };\n};\n\nconst StyledFooter = withStyles(styles)(Footer);\nexport default connect(\n  null,\n  mapDispatchToProps\n)(StyledFooter);\n","import * as actionTypes from './actionTypes';\n\nexport const toggleAddModal = () => {\n  return { type: actionTypes.TOGGLE_ADD_MODAL };\n};\n","export const ADD_ITEM = 'ADD_ITEM';\nexport const TOGGLE_ITEM = 'TOGGLE_ITEM';\nexport const REMOVE_ITEM = 'REMOVE_ITEM';\nexport const SET_VISIBLE_FILTER = 'SET_VISIBLE_FILTER';\nexport const TOGGLE_ADD_MODAL = 'TOGGLE_ADD_MODAL';\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Avatar from '@material-ui/core/Avatar';\n\nconst styles = theme => ({\n  groceryItem: {}\n});\n\nconst UnstyledGroceryItem = props => {\n  const { classes } = props;\n  return (\n    <ListItem key={props.value} button className={classes.groceryItem}>\n      <ListItemAvatar>\n        <Avatar alt={`Avatar n°${props.value + 1}`} />\n      </ListItemAvatar>\n      <ListItemText primary={`Line item ${props.value + 1}`} />\n      <ListItemSecondaryAction>\n        <Checkbox\n          onChange={props.handleToggle(props.value)}\n          checked={props.checked}\n        />\n      </ListItemSecondaryAction>\n    </ListItem>\n  );\n};\n\nUnstyledGroceryItem.propTypes = {\n  classes: PropTypes.object.isRequired,\n  value: PropTypes.number.isRequired,\n  checked: PropTypes.bool.isRequired,\n  handleToggle: PropTypes.func.isRequired\n};\n\nexport default withStyles(styles)(UnstyledGroceryItem);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport List from '@material-ui/core/List';\nimport GroceryItem from './GroceryItem';\n\nconst styles = theme => ({\n  root: {\n    width: '100%',\n    backgroundColor: theme.palette.background.paper\n  }\n});\n\nclass ItemList extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleToggle = this.handleToggle.bind(this);\n  }\n  state = {\n    checked: [1]\n  };\n\n  handleToggle = value => () => {\n    const { checked } = this.state;\n    const currentIndex = checked.indexOf(value);\n    const newChecked = [...checked];\n\n    if (currentIndex === -1) {\n      newChecked.push(value);\n    } else {\n      newChecked.splice(currentIndex, 1);\n    }\n\n    this.setState({\n      checked: newChecked\n    });\n  };\n\n  render() {\n    const { classes } = this.props;\n    const numbersArray = [...Array(50).keys()];\n\n    return (\n      <List className={classes.root}>\n        {numbersArray.map(value => (\n          <GroceryItem\n            key={value}\n            value={value}\n            handleToggle={this.handleToggle}\n            checked={this.state.checked.indexOf(value) !== -1}\n          />\n        ))}\n      </List>\n    );\n  }\n}\n\nItemList.propTypes = {\n  classes: PropTypes.object.isRequired\n};\n\nexport default withStyles(styles)(ItemList);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport ItemList from './ItemList';\n\nconst styles = theme => ({\n  paper: {\n    padding: theme.spacing.unit * 2,\n    marginTop: theme.spacing.unit * 9,\n    marginBottom: theme.spacing.unit * 9,\n    marginLeft: theme.spacing.unit * 2,\n    marginRight: theme.spacing.unit * 2,\n    textAlign: 'center',\n    color: theme.palette.text.secondary\n  }\n});\n\nfunction ItemListContainer(props) {\n  const { classes } = props;\n\n  return (\n    <div className={classes.root}>\n      <Paper className={classes.paper}>\n        <Grid container spacing={16}>\n          <Grid item xs={12}>\n            <ItemList />\n          </Grid>\n        </Grid>\n      </Paper>\n    </div>\n  );\n}\n\nItemListContainer.propTypes = {\n  classes: PropTypes.object.isRequired\n};\n\nexport default withStyles(styles)(ItemListContainer);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\n\nconst AddDialog = ({ isOpen, toggleModal }) => {\n  return (\n    <Dialog\n      open={isOpen}\n      onClose={toggleModal}\n      aria-labelledby='form-dialog-title'\n    >\n      <DialogTitle id='form-dialog-title'>Subscribe</DialogTitle>\n      <DialogContent>\n        <DialogContentText>\n          To subscribe to this website, please enter your email address here. We\n          will send updates occasionally.\n        </DialogContentText>\n        <TextField\n          autoFocus\n          margin='dense'\n          id='name'\n          label='Email Address'\n          type='email'\n          fullWidth\n        />\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={toggleModal} color='primary'>\n          Cancel\n        </Button>\n        <Button onClick={toggleModal} color='primary'>\n          Subscribe\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n};\n\nAddDialog.propTypes = {\n  toggleModal: PropTypes.func.isRequired,\n  isOpen: PropTypes.bool.isRequired\n};\n\nexport default AddDialog;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Header from './Header';\nimport FooterBar from './FooterBar';\nimport ItemListContainer from './ItemListContainer';\nimport AddDialog from './AddDialog';\nimport { toggleAddModal as toggleAddAction } from '../actions/groceryList';\n\nconst styles = theme => ({});\n\nclass App extends Component {\n  state = {\n    value: 'recents'\n  };\n\n  handleChange = (event, value) => {\n    this.setState({ value });\n  };\n\n  render() {\n    // const { classes } = this.props;\n    // const { value } = this.state;\n\n    return (\n      <React.Fragment>\n        <CssBaseline />\n        <Header />\n        <ItemListContainer />\n        <FooterBar />\n        <AddDialog\n          isOpen={this.props.addModalIsOpen}\n          toggleModal={this.props.toggleAddModal}\n        />\n      </React.Fragment>\n    );\n  }\n}\n\nApp.propTypes = {\n  classes: PropTypes.object.isRequired,\n  addModalIsOpen: PropTypes.bool.isRequired,\n  toggleAddModal: PropTypes.func.isRequired\n};\n\nexport const StyledApp = withStyles(styles)(App);\n\nconst mapStateToProps = state => ({\n  addModalIsOpen: state.addGroceriesModalOpen\n});\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    toggleAddModal: () => dispatch(toggleAddAction())\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(StyledApp);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import * as actionTypes from '../actions/actionTypes';\nconst initialState = {\n  addGroceriesModalOpen: false\n};\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.TOGGLE_ADD_MODAL:\n      return { ...state, addGroceriesModalOpen: !state.addGroceriesModalOpen };\n    default:\n      return state;\n  }\n};\n","import { createStore } from 'redux';\nimport reducer from './reducers';\nexport default createStore(reducer);\n","import React from 'react';\nimport { Provider } from 'react-redux';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\nimport store from './configureStore';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}